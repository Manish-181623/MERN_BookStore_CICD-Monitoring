version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
    ports:
      - "5000:3000"
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
    ports:
      - "4000:3000"
    environment:
      - MONGO_URL=mongodb://mongo:27017/books-collection?retryWrites=true&w=majority
    depends_on:
      - mongo

  mongo:
    image: mongo:4.4  # Use MongoDB 4.4 to avoid AVX requirement
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db

  # mongo-express:
  #   image: mongo-express
  #   environment:
  #     - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
  #     - ME_CONFIG_MONGODB_ADMINPASSWORD=admin
  #     - ME_CONFIG_MONGODB_SERVER=mongo
  #   ports:
  #     - "8081:8081"
  #   depends_on:
  #     - mongo
  prometheus:
    image: prom/prometheus
    volumes:
      - ./config/:/etc/prometheus
      - ./data/:/data
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention=31d'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"


  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - "8090:8080"

  node_exporter:
    image: prom/node-exporter
    ports:
      - "9100:9100"
    volumes:
      - node_exporter_data:/prometheus


volumes:
  mongo-data:
  node_exporter_data:
  grafana_data:
  data:
